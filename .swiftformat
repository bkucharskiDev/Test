# file options

--exclude Tests/XCTestManifests.swift,Snapshots

# format options

--allman false
--binarygrouping 4,8
--commas always
--comments indent
--decimalgrouping 3,6
--elseposition same-line
--empty void
--exponentcase lowercase
--exponentgrouping disabled
--fractiongrouping disabled
--header ignore
--hexgrouping 4,8
--hexliteralcase uppercase
--ifdef indent
--indent 4
--indentcase false
--importgrouping testable-bottom
--linebreaks lf
--maxwidth none
--octalgrouping 4,8
--operatorfunc spaced
--patternlet hoist
--ranges spaced
--self remove
--semicolons inline
--stripunusedargs always
--swiftversion 4.2
--trimwhitespace always
--wraparguments preserve
--wrapcollections preserve

# rules
--enable andOperator                  # Prefer comma over && in if, guard or while conditions.
--enable anyObjectProtocol            # Prefer AnyObject over class in protocol definitions.
--enable blankLinesAroundMark         # Insert blank line before and after MARK: comments.
--enable blankLinesAtEndOfScope       # Remove trailing blank line at the end of a scope.
--enable blankLinesAtStartOfScope     # Remove leading blank line at the start of a scope.
--enable blankLinesBetweenScopes      # Insert blank line before class, struct, enum, extension, protocol or function declarations.
--enable braces                       # Wrap braces in accordance with selected style (K&R or Allman).
--enable consecutiveBlankLines        # Replace consecutive blank lines with a single blank line.
--enable consecutiveSpaces Replace consecutive spaces with a single space.
--enable duplicateImports Remove duplicate import statements.
--enable elseOnSameLine Place else, catch or while keyword in accordance with current style (same or next line). See --elseposition in options !!!
--enable emptyBraces Remove whitespace inside empty braces.
--enable fileHeader Use specified source file header template for all files. See --header option ???
--enable hoistPatternLet Reposition let or var bindings within pattern. See --patternlet option
--enable indent do zrobienia xD !!!!
--enable leadingDelimiters Move leading delimiters to the end of the previous line.
--enable linebreakAtEndOfFile Add empty blank line at end of file. See --linebreaks option
--enable numberFormatting Use consistent grouping for numeric literals. See many options
--enable redundantBreak Remove redundant break in switch case.
--enable redundantExtensionACL Remove redundant access control specifiers.
--enable redundantFileprivate Prefer private over fileprivate where equivalent.
--enable redundantGet Remove unneeded get clause inside computed properties.
--enable redundantInit Remove explicit init if not required.
--enable redundantLet Remove redundant let/var from ignored variables.
--enable redundantLetError Remove redundant let error from catch clause.
--enable redundantNilInit Remove redundant nil default value (Optional vars are nil by default).
--enable redundantObjc Remove redundant @objc annotations.
--enable redundantParens Remove redundant parentheses.
--enable redundantPattern Remove redundant pattern matching parameter syntax.
--enable redundantReturn Remove unneeded return keyword.
--enable
--enable

# Disabled

--disabled isEmpty In rare cases, the isEmpty rule may insert an isEmpty call for a type that doesn't implement that property, breaking the program. For this reason, the rule is disabled by default, and must be manually enabled via the --enable isEmpty option.
--disabled ranges It is deprecated. spaceAroundOperators is used instead.

# Do przegadania
--disabled redundantRawValues Remove redundant raw string values for enum cases.
